#include <iostream>
#include <cstdio>
#include <vector>
#include <stack>

using namespace std;

struct card{
    char s;
    char n;
    inline bool operator==(const card& a) {
        return this->s == a.s || this->n == a.n;
    }
};

vector< stack<card> > v(52);
int a[52] = {1};


int main() {
    string str1, str2;
    while ( getline(cin,str1) && getline(cin,str2)) {
        //if (str[0] == '#') break;
        card c;
        for (int i = 0; i < 26; i++) {
            c.s = str1[4*i];
            c.n = str1[4*i+1];
            v[i].push(c);
            c.s = str2[4*i];
            c.n = str2[4*i+1];
            v[i+26].push(c);
        }
        for (int j = 0; j < v.size(); j++) cout <<v[j].top().s<<v[j].top().n<<" ";
        cout<<endl;
        for (int i = 1; i < v.size(); i++) {
            if (i-3 >= 0 && v[i].top() == v[i-3].top()) {
                v[i-3].push(v[i].top());
                v[i].pop();
                if(v[i].empty()) v.erase(v.begin()+i);
                a[i-3] += a[i];
                i-=4;
                for (int j = 0; j < v.size(); j++) cout <<v[j].top().s<<v[j].top().n<<" ";
                cout<<endl;
            } else if (i-1 >= 0 && v[i].top() == v[i-1].top()) {
                v[i-1].push(v[i].top());
                v[i].pop();
                if(v[i].empty()) v.erase(v.begin()+i);
                a[i-1] += a[i];
                i-=2;
                for (int j = 0; j < v.size(); j++) cout <<v[j].top().s<<v[j].top().n<<" ";
                cout<<endl;
            }
        }
    }
    return 0;
}



